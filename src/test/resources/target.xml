<?xml version="1.0" encoding="UTF-8"?>
<ncx xmlns="http://www.daisy.org/z3986/2005/ncx/" version="2005-1">
   <head>
      <meta name="dtb:uid" content="bookid"/>
      <meta name="dtb:depth" content="0"/>
      <meta name="dtb:totalPageCount" content="0"/>
      <meta name="dtb:maxPageNumber" content="0"/>
   </head>
   <docTitle>
      <text>UnKnown</text>
   </docTitle>
   <navMap>
     <navPoint id="id1" playOrder="1">
       <navLabel>
         <text>前言</text>
       </navLabel>
       <content src="text00002.html"/>
     </navPoint>
     <navPoint id="id2" playOrder="2">
       <navLabel>
         <text>第1章 并发编程的挑战</text>
       </navLabel>
       <content src="text00003.html"/>
     </navPoint>
     <navPoint id="id3" playOrder="3">
       <navLabel>
         <text>1.1 上下文切换</text>
       </navLabel>
       <content src="text00004.html"/>
     </navPoint>
     <navPoint id="id4" playOrder="4">
       <navLabel>
         <text>1.1.1 多线程一定快吗</text>
       </navLabel>
       <content src="text00005.html"/>
     </navPoint>
     <navPoint id="id5" playOrder="5">
       <navLabel>
         <text>1.1.2 测试上下文切换次数和时长</text>
       </navLabel>
       <content src="text00006.html"/>
     </navPoint>
     <navPoint id="id6" playOrder="6">
       <navLabel>
         <text>1.1.3 如何减少上下文切换</text>
       </navLabel>
       <content src="text00007.html"/>
     </navPoint>
     <navPoint id="id7" playOrder="7">
       <navLabel>
         <text>1.1.4 减少上下文切换实战</text>
       </navLabel>
       <content src="text00008.html"/>
     </navPoint>
     <navPoint id="id8" playOrder="8">
       <navLabel>
         <text>1.2 死锁</text>
       </navLabel>
       <content src="text00009.html"/>
     </navPoint>
     <navPoint id="id9" playOrder="9">
       <navLabel>
         <text>1.3 资源限制的挑战</text>
       </navLabel>
       <content src="text00010.html"/>
     </navPoint>
     <navPoint id="id10" playOrder="10">
       <navLabel>
         <text>1.4 本章小结</text>
       </navLabel>
       <content src="text00011.html"/>
     </navPoint>
     <navPoint id="id11" playOrder="11">
       <navLabel>
         <text>第2章 Java并发机制的底层实现原理</text>
       </navLabel>
       <content src="text00012.html"/>
     </navPoint>
     <navPoint id="id12" playOrder="12">
       <navLabel>
         <text>2.1 volatile的应用</text>
       </navLabel>
       <content src="text00013.html"/>
     </navPoint>
     <navPoint id="id13" playOrder="13">
       <navLabel>
         <text>2.2 synchronized的实现原理与应用</text>
       </navLabel>
       <content src="text00014.html"/>
     </navPoint>
     <navPoint id="id14" playOrder="14">
       <navLabel>
         <text>2.2.1 Java对象头</text>
       </navLabel>
       <content src="text00015.html"/>
     </navPoint>
     <navPoint id="id15" playOrder="15">
       <navLabel>
         <text>2.2.2 锁的升级与对比</text>
       </navLabel>
       <content src="text00016.html"/>
     </navPoint>
     <navPoint id="id16" playOrder="16">
       <navLabel>
         <text>2.3 原子操作的实现原理</text>
       </navLabel>
       <content src="text00012.html"/>
     </navPoint>
     <navPoint id="id17" playOrder="17">
       <navLabel>
         <text>2.4 本章小结</text>
       </navLabel>
       <content src="text00013.html"/>
     </navPoint>
     <navPoint id="id18" playOrder="18">
       <navLabel>
         <text>第3章 Java内存模型</text>
       </navLabel>
       <content src="text00014.html"/>
     </navPoint>
     <navPoint id="id19" playOrder="19">
       <navLabel>
         <text>3.1 Java内存模型的基础</text>
       </navLabel>
       <content src="text00014.html"/>
     </navPoint>
     <navPoint id="id20" playOrder="20">
       <navLabel>
         <text>3.1.2 Java内存模型的抽象结构</text>
       </navLabel>
       <content src="text00015.html"/>
     </navPoint>
     <navPoint id="id21" playOrder="21">
       <navLabel>
         <text>3.1.3 从源代码到指令序列的重排序</text>
       </navLabel>
       <content src="text00016.html"/>
     </navPoint>
     <navPoint id="id22" playOrder="22">
       <navLabel>
         <text>3.1.4 并发编程模型的分类</text>
       </navLabel>
       <content src="text00017.html"/>
     </navPoint>
     <navPoint id="id23" playOrder="23">
       <navLabel>
         <text>3.1.5 happens-before简介</text>
       </navLabel>
       <content src="text00017.html"/>
     </navPoint>
     <navPoint id="id24" playOrder="24">
       <navLabel>
         <text>3.2 重排序</text>
       </navLabel>
       <content src="text00018.html"/>
     </navPoint>
     <navPoint id="id25" playOrder="25">
       <navLabel>
         <text>3.2.1 数据依赖性</text>
       </navLabel>
       <content src="text00019.html"/>
     </navPoint>
     <navPoint id="id26" playOrder="26">
       <navLabel>
         <text>3.2.2 as-if-serial语义</text>
       </navLabel>
       <content src="text00020.html"/>
     </navPoint>
     <navPoint id="id27" playOrder="27">
       <navLabel>
         <text>3.2.3 程序顺序规则</text>
       </navLabel>
       <content src="text00021.html"/>
     </navPoint>
     <navPoint id="id28" playOrder="28">
       <navLabel>
         <text>3.2.4 重排序对多线程的影响</text>
       </navLabel>
       <content src="text00022.html"/>
     </navPoint>
     <navPoint id="id29" playOrder="29">
       <navLabel>
         <text>3.3 顺序一致性</text>
       </navLabel>
       <content src="text00023.html"/>
     </navPoint>
     <navPoint id="id30" playOrder="30">
       <navLabel>
         <text>3.3.1 数据竞争与顺序一致性</text>
       </navLabel>
       <content src="text00024.html"/>
     </navPoint>
     <navPoint id="id31" playOrder="31">
       <navLabel>
         <text>3.3.2 顺序一致性内存模型</text>
       </navLabel>
       <content src="text00025.html"/>
     </navPoint>
     <navPoint id="id32" playOrder="32">
       <navLabel>
         <text>3.3.3 同步程序的顺序一致性效果</text>
       </navLabel>
       <content src="text00026.html"/>
     </navPoint>
     <navPoint id="id33" playOrder="33">
       <navLabel>
         <text>3.3.4 未同步程序的执行特性</text>
       </navLabel>
       <content src="text00027.html"/>
     </navPoint>
     <navPoint id="id34" playOrder="34">
       <navLabel>
         <text>3.4 volatile的内存语义</text>
       </navLabel>
       <content src="text00028.html"/>
     </navPoint>
     <navPoint id="id35" playOrder="35">
       <navLabel>
         <text>3.4.1 volatile的特性</text>
       </navLabel>
       <content src="text00029.html"/>
     </navPoint>
     <navPoint id="id36" playOrder="36">
       <navLabel>
         <text>3.4.2 volatile写-读建立的happens-before关系</text>
       </navLabel>
       <content src="text00030.html"/>
     </navPoint>
     <navPoint id="id37" playOrder="37">
       <navLabel>
         <text>3.4.3 volatile写-读的内存语义</text>
       </navLabel>
       <content src="text00031.html"/>
     </navPoint>
     <navPoint id="id38" playOrder="38">
       <navLabel>
         <text>3.4.4 volatile内存语义的实现</text>
       </navLabel>
       <content src="text00032.html"/>
     </navPoint>
     <navPoint id="id39" playOrder="39">
       <navLabel>
         <text>3.4.5 JSR-133为什么要增强volatile的内存语义</text>
       </navLabel>
       <content src="text00033.html"/>
     </navPoint>
     <navPoint id="id40" playOrder="40">
       <navLabel>
         <text>3.5 锁的内存语义</text>
       </navLabel>
       <content src="text00034.html"/>
     </navPoint>
     <navPoint id="id41" playOrder="41">
       <navLabel>
         <text>3.5.1 锁的释放-获取建立的happens-before关系</text>
       </navLabel>
       <content src="text00035.html"/>
     </navPoint>
     <navPoint id="id42" playOrder="42">
       <navLabel>
         <text>3.5.2 锁的释放和获取的内存语义</text>
       </navLabel>
       <content src="text00036.html"/>
     </navPoint>
     <navPoint id="id43" playOrder="43">
       <navLabel>
         <text>3.5.3 锁内存语义的实现</text>
       </navLabel>
       <content src="text00037.html"/>
     </navPoint>
     <navPoint id="id44" playOrder="44">
       <navLabel>
         <text>3.5.4 concurrent包的实现</text>
       </navLabel>
       <content src="text00038.html"/>
     </navPoint>
     <navPoint id="id45" playOrder="45">
       <navLabel>
         <text>3.6 final域的内存语义</text>
       </navLabel>
       <content src="text00039.html"/>
     </navPoint>
     <navPoint id="id46" playOrder="46">
       <navLabel>
         <text>3.6.1 final域的重排序规则</text>
       </navLabel>
       <content src="text00040.html"/>
     </navPoint>
     <navPoint id="id47" playOrder="47">
       <navLabel>
         <text>3.6.2 写final域的重排序规则</text>
       </navLabel>
       <content src="text00041.html"/>
     </navPoint>
     <navPoint id="id48" playOrder="48">
       <navLabel>
         <text>3.6.3 读final域的重排序规则</text>
       </navLabel>
       <content src="text00042.html"/>
     </navPoint>
     <navPoint id="id49" playOrder="49">
       <navLabel>
         <text>3.6.4 final域为引用类型</text>
       </navLabel>
       <content src="text00043.html"/>
     </navPoint>
     <navPoint id="id50" playOrder="50">
       <navLabel>
         <text>3.6.5 为什么final引用不能从构造函数内“溢出”</text>
       </navLabel>
       <content src="text00044.html"/>
     </navPoint>
     <navPoint id="id51" playOrder="51">
       <navLabel>
         <text>3.6.6 final语义在处理器中的实现</text>
       </navLabel>
       <content src="text00045.html"/>
     </navPoint>
     <navPoint id="id52" playOrder="52">
       <navLabel>
         <text>3.6.7 JSR-133为什么要增强final的语义</text>
       </navLabel>
       <content src="text00045.html"/>
     </navPoint>
     <navPoint id="id53" playOrder="53">
       <navLabel>
         <text>3.7 happens-before</text>
       </navLabel>
       <content src="text00046.html"/>
     </navPoint>
     <navPoint id="id54" playOrder="54">
       <navLabel>
         <text>3.7.1 JMM的设计</text>
       </navLabel>
       <content src="text00047.html"/>
     </navPoint>
     <navPoint id="id55" playOrder="55">
       <navLabel>
         <text>3.7.2 happens-before的定义</text>
       </navLabel>
       <content src="text00048.html"/>
     </navPoint>
     <navPoint id="id56" playOrder="56">
       <navLabel>
         <text>3.7.3 happens-before规则</text>
       </navLabel>
       <content src="text00049.html"/>
     </navPoint>
     <navPoint id="id57" playOrder="57">
       <navLabel>
         <text>3.8 双重检查锁定与延迟初始化</text>
       </navLabel>
       <content src="text00050.html"/>
     </navPoint>
     <navPoint id="id58" playOrder="58">
       <navLabel>
         <text>3.8.1 双重检查锁定的由来</text>
       </navLabel>
       <content src="text00051.html"/>
     </navPoint>
     <navPoint id="id59" playOrder="59">
       <navLabel>
         <text>3.8.2 问题的根源</text>
       </navLabel>
       <content src="text00052.html"/>
     </navPoint>
     <navPoint id="id60" playOrder="60">
       <navLabel>
         <text>3.8.3 基于volatile的解决方案</text>
       </navLabel>
       <content src="text00053.html"/>
     </navPoint>
     <navPoint id="id61" playOrder="61">
       <navLabel>
         <text>3.8.4 基于类初始化的解决方案</text>
       </navLabel>
       <content src="text00054.html"/>
     </navPoint>
     <navPoint id="id62" playOrder="62">
       <navLabel>
         <text>3.9 Java内存模型综述</text>
       </navLabel>
       <content src="text00055.html"/>
     </navPoint>
     <navPoint id="id63" playOrder="63">
       <navLabel>
         <text>3.9.1 处理器的内存模型</text>
       </navLabel>
       <content src="text00056.html"/>
     </navPoint>
     <navPoint id="id64" playOrder="64">
       <navLabel>
         <text>3.9.2 各种内存模型之间的关系</text>
       </navLabel>
       <content src="text00057.html"/>
     </navPoint>
     <navPoint id="id65" playOrder="65">
       <navLabel>
         <text>3.9.3 JMM的内存可见性保证</text>
       </navLabel>
       <content src="text00058.html"/>
     </navPoint>
     <navPoint id="id66" playOrder="66">
       <navLabel>
         <text>3.9.4 JSR-133对旧内存模型的修补</text>
       </navLabel>
       <content src="text00059.html"/>
     </navPoint>
     <navPoint id="id67" playOrder="67">
       <navLabel>
         <text>3.10 本章小结</text>
       </navLabel>
       <content src="text00060.html"/>
     </navPoint>
     <navPoint id="id68" playOrder="68">
       <navLabel>
         <text>第4章 Java并发编程基础</text>
       </navLabel>
       <content src="text00061.html"/>
     </navPoint>
     <navPoint id="id69" playOrder="69">
       <navLabel>
         <text>4.1 线程简介</text>
       </navLabel>
       <content src="text00062.html"/>
     </navPoint>
     <navPoint id="id70" playOrder="70">
       <navLabel>
         <text>4.1.2 为什么要使用多线程</text>
       </navLabel>
       <content src="text00063.html"/>
     </navPoint>
     <navPoint id="id71" playOrder="71">
       <navLabel>
         <text>4.1.3 线程优先级</text>
       </navLabel>
       <content src="text00063.html"/>
     </navPoint>
     <navPoint id="id72" playOrder="72">
       <navLabel>
         <text>4.1.4 线程的状态</text>
       </navLabel>
       <content src="text00064.html"/>
     </navPoint>
     <navPoint id="id73" playOrder="73">
       <navLabel>
         <text>4.1.5 Daemon线程</text>
       </navLabel>
       <content src="text00065.html"/>
     </navPoint>
     <navPoint id="id74" playOrder="74">
       <navLabel>
         <text>4.2 启动和终止线程</text>
       </navLabel>
       <content src="text00066.html"/>
     </navPoint>
     <navPoint id="id75" playOrder="75">
       <navLabel>
         <text>4.2.1 构造线程</text>
       </navLabel>
       <content src="text00067.html"/>
     </navPoint>
     <navPoint id="id76" playOrder="76">
       <navLabel>
         <text>4.2.2 启动线程</text>
       </navLabel>
       <content src="text00068.html"/>
     </navPoint>
     <navPoint id="id77" playOrder="77">
       <navLabel>
         <text>4.2.3 理解中断</text>
       </navLabel>
       <content src="text00069.html"/>
     </navPoint>
     <navPoint id="id78" playOrder="78">
       <navLabel>
         <text>4.2.4 过期的suspend()、resume()和stop()</text>
       </navLabel>
       <content src="text00070.html"/>
     </navPoint>
     <navPoint id="id79" playOrder="79">
       <navLabel>
         <text>4.2.5 安全地终止线程</text>
       </navLabel>
       <content src="text00071.html"/>
     </navPoint>
     <navPoint id="id80" playOrder="80">
       <navLabel>
         <text>4.3 线程间通信</text>
       </navLabel>
       <content src="text00072.html"/>
     </navPoint>
     <navPoint id="id81" playOrder="81">
       <navLabel>
         <text>4.3.1 volatile和synchronized关键字</text>
       </navLabel>
       <content src="text00073.html"/>
     </navPoint>
     <navPoint id="id82" playOrder="82">
       <navLabel>
         <text>4.3.2 等待/通知机制</text>
       </navLabel>
       <content src="text00074.html"/>
     </navPoint>
     <navPoint id="id83" playOrder="83">
       <navLabel>
         <text>4.3.3 等待/通知的经典范式</text>
       </navLabel>
       <content src="text00075.html"/>
     </navPoint>
     <navPoint id="id84" playOrder="84">
       <navLabel>
         <text>4.3.4 管道输入/输出流</text>
       </navLabel>
       <content src="text00076.html"/>
     </navPoint>
     <navPoint id="id85" playOrder="85">
       <navLabel>
         <text>4.3.5 Thread.join()的使用</text>
       </navLabel>
       <content src="text00077.html"/>
     </navPoint>
     <navPoint id="id86" playOrder="86">
       <navLabel>
         <text>4.3.6 ThreadLocal的使用</text>
       </navLabel>
       <content src="text00078.html"/>
     </navPoint>
     <navPoint id="id87" playOrder="87">
       <navLabel>
         <text>4.4 线程应用实例</text>
       </navLabel>
       <content src="text00079.html"/>
     </navPoint>
     <navPoint id="id88" playOrder="88">
       <navLabel>
         <text>4.4.2 一个简单的数据库连接池示例</text>
       </navLabel>
       <content src="text00080.html"/>
     </navPoint>
     <navPoint id="id89" playOrder="89">
       <navLabel>
         <text>4.4.3 线程池技术及其示例</text>
       </navLabel>
       <content src="text00081.html"/>
     </navPoint>
     <navPoint id="id90" playOrder="90">
       <navLabel>
         <text>4.4.4 一个基于线程池技术的简单Web服务器</text>
       </navLabel>
       <content src="text00082.html"/>
     </navPoint>
     <navPoint id="id91" playOrder="91">
       <navLabel>
         <text>4.5 本章小结</text>
       </navLabel>
       <content src="text00083.html"/>
     </navPoint>
     <navPoint id="id92" playOrder="92">
       <navLabel>
         <text>第5章 Java中的锁</text>
       </navLabel>
       <content src="text00084.html"/>
     </navPoint>
     <navPoint id="id93" playOrder="93">
       <navLabel>
         <text>5.1 Lock接口</text>
       </navLabel>
       <content src="text00084.html"/>
     </navPoint>
     <navPoint id="id94" playOrder="94">
       <navLabel>
         <text>5.2 队列同步器</text>
       </navLabel>
       <content src="text00085.html"/>
     </navPoint>
     <navPoint id="id95" playOrder="95">
       <navLabel>
         <text>5.2.1 队列同步器的接口与示例</text>
       </navLabel>
       <content src="text00086.html"/>
     </navPoint>
     <navPoint id="id96" playOrder="96">
       <navLabel>
         <text>5.2.2 队列同步器的实现分析</text>
       </navLabel>
       <content src="text00087.html"/>
     </navPoint>
     <navPoint id="id97" playOrder="97">
       <navLabel>
         <text>5.3 重入锁</text>
       </navLabel>
       <content src="text00088.html"/>
     </navPoint>
     <navPoint id="id98" playOrder="98">
       <navLabel>
         <text>5.4 读写锁</text>
       </navLabel>
       <content src="text00089.html"/>
     </navPoint>
     <navPoint id="id99" playOrder="99">
       <navLabel>
         <text>5.4.1 读写锁的接口与示例</text>
       </navLabel>
       <content src="text00090.html"/>
     </navPoint>
     <navPoint id="id100" playOrder="100">
       <navLabel>
         <text>5.4.2 读写锁的实现分析</text>
       </navLabel>
       <content src="text00090.html"/>
     </navPoint>
     <navPoint id="id101" playOrder="101">
       <navLabel>
         <text>5.5 LockSupport工具</text>
       </navLabel>
       <content src="text00090.html"/>
     </navPoint>
     <navPoint id="id102" playOrder="102">
       <navLabel>
         <text>5.6 Condition接口</text>
       </navLabel>
       <content src="text00091.html"/>
     </navPoint>
     <navPoint id="id103" playOrder="103">
       <navLabel>
         <text>5.6.1 Condition接口与示例</text>
       </navLabel>
       <content src="text00091.html"/>
     </navPoint>
     <navPoint id="id104" playOrder="104">
       <navLabel>
         <text>5.6.2 Condition的实现分析</text>
       </navLabel>
       <content src="text00092.html"/>
     </navPoint>
     <navPoint id="id105" playOrder="105">
       <navLabel>
         <text>5.7 本章小结</text>
       </navLabel>
       <content src="text00092.html"/>
     </navPoint>
     <navPoint id="id106" playOrder="106">
       <navLabel>
         <text>第6章 Java并发容器和框架</text>
       </navLabel>
       <content src="text00093.html"/>
     </navPoint>
     <navPoint id="id107" playOrder="107">
       <navLabel>
         <text>6.1 ConcurrentHashMap的实现原理与使用</text>
       </navLabel>
       <content src="text00094.html"/>
     </navPoint>
     <navPoint id="id108" playOrder="108">
       <navLabel>
         <text>6.1.1 为什么要使用ConcurrentHashMap</text>
       </navLabel>
       <content src="text00095.html"/>
     </navPoint>
     <navPoint id="id109" playOrder="109">
       <navLabel>
         <text>6.1.2 ConcurrentHashMap的结构</text>
       </navLabel>
       <content src="text00096.html"/>
     </navPoint>
     <navPoint id="id110" playOrder="110">
       <navLabel>
         <text>6.1.3 ConcurrentHashMap的初始化</text>
       </navLabel>
       <content src="text00097.html"/>
     </navPoint>
     <navPoint id="id111" playOrder="111">
       <navLabel>
         <text>6.1.4 定位Segment</text>
       </navLabel>
       <content src="text00097.html"/>
     </navPoint>
     <navPoint id="id112" playOrder="112">
       <navLabel>
         <text>6.1.5 ConcurrentHashMap的操作</text>
       </navLabel>
       <content src="text00097.html"/>
     </navPoint>
     <navPoint id="id113" playOrder="113">
       <navLabel>
         <text>6.2 ConcurrentLinkedQueue</text>
       </navLabel>
       <content src="text00098.html"/>
     </navPoint>
     <navPoint id="id114" playOrder="114">
       <navLabel>
         <text>6.2.1 ConcurrentLinkedQueue的结构</text>
       </navLabel>
       <content src="text00098.html"/>
     </navPoint>
     <navPoint id="id115" playOrder="115">
       <navLabel>
         <text>6.2.2 入队列</text>
       </navLabel>
       <content src="text00098.html"/>
     </navPoint>
     <navPoint id="id116" playOrder="116">
       <navLabel>
         <text>6.2.3 出队列</text>
       </navLabel>
       <content src="text00099.html"/>
     </navPoint>
     <navPoint id="id117" playOrder="117">
       <navLabel>
         <text>6.3 Java中的阻塞队列</text>
       </navLabel>
       <content src="text00099.html"/>
     </navPoint>
     <navPoint id="id118" playOrder="118">
       <navLabel>
         <text>6.3.1 什么是阻塞队列</text>
       </navLabel>
       <content src="text00100.html"/>
     </navPoint>
     <navPoint id="id119" playOrder="119">
       <navLabel>
         <text>6.3.2 Java里的阻塞队列</text>
       </navLabel>
       <content src="text00101.html"/>
     </navPoint>
     <navPoint id="id120" playOrder="120">
       <navLabel>
         <text>6.3.3 阻塞队列的实现原理</text>
       </navLabel>
       <content src="text00102.html"/>
     </navPoint>
     <navPoint id="id121" playOrder="121">
       <navLabel>
         <text>6.4 Fork/Join框架</text>
       </navLabel>
       <content src="text00102.html"/>
     </navPoint>
     <navPoint id="id122" playOrder="122">
       <navLabel>
         <text>6.4.1 什么是Fork/Join框架</text>
       </navLabel>
       <content src="text00103.html"/>
     </navPoint>
     <navPoint id="id123" playOrder="123">
       <navLabel>
         <text>6.4.2 工作窃取算法</text>
       </navLabel>
       <content src="text00104.html"/>
     </navPoint>
     <navPoint id="id124" playOrder="124">
       <navLabel>
         <text>6.4.3 Fork/Join框架的设计</text>
       </navLabel>
       <content src="text00105.html"/>
     </navPoint>
     <navPoint id="id125" playOrder="125">
       <navLabel>
         <text>6.4.4 使用Fork/Join框架</text>
       </navLabel>
       <content src="text00106.html"/>
     </navPoint>
     <navPoint id="id126" playOrder="126">
       <navLabel>
         <text>6.4.5 Fork/Join框架的异常处理</text>
       </navLabel>
       <content src="text00106.html"/>
     </navPoint>
     <navPoint id="id127" playOrder="127">
       <navLabel>
         <text>6.4.6 Fork/Join框架的实现原理</text>
       </navLabel>
       <content src="text00107.html"/>
     </navPoint>
     <navPoint id="id128" playOrder="128">
       <navLabel>
         <text>6.5 本章小结</text>
       </navLabel>
       <content src="text00108.html"/>
     </navPoint>
     <navPoint id="id129" playOrder="129">
       <navLabel>
         <text>第7章 Java中的13个原子操作类</text>
       </navLabel>
       <content src="text00109.html"/>
     </navPoint>
     <navPoint id="id130" playOrder="130">
       <navLabel>
         <text>7.1 原子更新基本类型类</text>
       </navLabel>
       <content src="text00110.html"/>
     </navPoint>
     <navPoint id="id131" playOrder="131">
       <navLabel>
         <text>7.2 原子更新数组</text>
       </navLabel>
       <content src="text00111.html"/>
     </navPoint>
     <navPoint id="id132" playOrder="132">
       <navLabel>
         <text>7.3 原子更新引用类型</text>
       </navLabel>
       <content src="text00112.html"/>
     </navPoint>
     <navPoint id="id133" playOrder="133">
       <navLabel>
         <text>7.4 原子更新字段类</text>
       </navLabel>
       <content src="text00113.html"/>
     </navPoint>
     <navPoint id="id134" playOrder="134">
       <navLabel>
         <text>7.5 本章小结</text>
       </navLabel>
       <content src="text00114.html"/>
     </navPoint>
     <navPoint id="id135" playOrder="135">
       <navLabel>
         <text>第8章 Java中的并发工具类</text>
       </navLabel>
       <content src="text00115.html"/>
     </navPoint>
     <navPoint id="id136" playOrder="136">
       <navLabel>
         <text>8.1 等待多线程完成的CountDownLatch</text>
       </navLabel>
       <content src="text00116.html"/>
     </navPoint>
     <navPoint id="id137" playOrder="137">
       <navLabel>
         <text>8.2 同步屏障CyclicBarrier</text>
       </navLabel>
       <content src="text00117.html"/>
     </navPoint>
     <navPoint id="id138" playOrder="138">
       <navLabel>
         <text>8.2.1 CyclicBarrier简介</text>
       </navLabel>
       <content src="text00117.html"/>
     </navPoint>
     <navPoint id="id139" playOrder="139">
       <navLabel>
         <text>8.2.2 CyclicBarrier的应用场景</text>
       </navLabel>
       <content src="text00118.html"/>
     </navPoint>
     <navPoint id="id140" playOrder="140">
       <navLabel>
         <text>8.2.3 CyclicBarrier和CountDownLatch的区别</text>
       </navLabel>
       <content src="text00119.html"/>
     </navPoint>
     <navPoint id="id141" playOrder="141">
       <navLabel>
         <text>8.3 控制并发线程数的Semaphore</text>
       </navLabel>
       <content src="text00120.html"/>
     </navPoint>
     <navPoint id="id142" playOrder="142">
       <navLabel>
         <text>8.4 线程间交换数据的Exchanger</text>
       </navLabel>
       <content src="text00120.html"/>
     </navPoint>
     <navPoint id="id143" playOrder="143">
       <navLabel>
         <text>8.5 本章小结</text>
       </navLabel>
       <content src="text00121.html"/>
     </navPoint>
     <navPoint id="id144" playOrder="144">
       <navLabel>
         <text>第9章 Java中的线程池</text>
       </navLabel>
       <content src="text00122.html"/>
     </navPoint>
     <navPoint id="id145" playOrder="145">
       <navLabel>
         <text>9.1 线程池的实现原理</text>
       </navLabel>
       <content src="text00122.html"/>
     </navPoint>
     <navPoint id="id146" playOrder="146">
       <navLabel>
         <text>9.2 线程池的使用</text>
       </navLabel>
       <content src="text00123.html"/>
     </navPoint>
     <navPoint id="id147" playOrder="147">
       <navLabel>
         <text>9.2.2 向线程池提交任务</text>
       </navLabel>
       <content src="text00124.html"/>
     </navPoint>
     <navPoint id="id148" playOrder="148">
       <navLabel>
         <text>9.2.3 关闭线程池</text>
       </navLabel>
       <content src="text00125.html"/>
     </navPoint>
     <navPoint id="id149" playOrder="149">
       <navLabel>
         <text>9.2.4 合理地配置线程池</text>
       </navLabel>
       <content src="text00126.html"/>
     </navPoint>
     <navPoint id="id150" playOrder="150">
       <navLabel>
         <text>9.2.5 线程池的监控</text>
       </navLabel>
       <content src="text00127.html"/>
     </navPoint>
     <navPoint id="id151" playOrder="151">
       <navLabel>
         <text>9.3 本章小结</text>
       </navLabel>
       <content src="text00128.html"/>
     </navPoint>
     <navPoint id="id152" playOrder="152">
       <navLabel>
         <text>第10章 Executor框架</text>
       </navLabel>
       <content src="text00129.html"/>
     </navPoint>
     <navPoint id="id153" playOrder="153">
       <navLabel>
         <text>10.1 Executor框架简介</text>
       </navLabel>
       <content src="text00130.html"/>
     </navPoint>
     <navPoint id="id154" playOrder="154">
       <navLabel>
         <text>10.1.2 Executor框架的结构与成员</text>
       </navLabel>
       <content src="text00131.html"/>
     </navPoint>
     <navPoint id="id155" playOrder="155">
       <navLabel>
         <text>10.2 ThreadPoolExecutor详解</text>
       </navLabel>
       <content src="text00132.html"/>
     </navPoint>
     <navPoint id="id156" playOrder="156">
       <navLabel>
         <text>10.2.1 FixedThreadPool详解</text>
       </navLabel>
       <content src="text00133.html"/>
     </navPoint>
     <navPoint id="id157" playOrder="157">
       <navLabel>
         <text>10.2.2 SingleThreadExecutor详解</text>
       </navLabel>
       <content src="text00134.html"/>
     </navPoint>
     <navPoint id="id158" playOrder="158">
       <navLabel>
         <text>10.2.3 CachedThreadPool详解</text>
       </navLabel>
       <content src="text00135.html"/>
     </navPoint>
     <navPoint id="id159" playOrder="159">
       <navLabel>
         <text>10.3 ScheduledThreadPoolExecutor详解</text>
       </navLabel>
       <content src="text00136.html"/>
     </navPoint>
     <navPoint id="id160" playOrder="160">
       <navLabel>
         <text>10.3.1 ScheduledThreadPoolExecutor的运行机制</text>
       </navLabel>
       <content src="text00137.html"/>
     </navPoint>
     <navPoint id="id161" playOrder="161">
       <navLabel>
         <text>10.3.2 ScheduledThreadPoolExecutor的实现</text>
       </navLabel>
       <content src="text00138.html"/>
     </navPoint>
     <navPoint id="id162" playOrder="162">
       <navLabel>
         <text>10.4 FutureTask详解</text>
       </navLabel>
       <content src="text00139.html"/>
     </navPoint>
     <navPoint id="id163" playOrder="163">
       <navLabel>
         <text>10.4.1 FutureTask简介</text>
       </navLabel>
       <content src="text00140.html"/>
     </navPoint>
     <navPoint id="id164" playOrder="164">
       <navLabel>
         <text>10.4.2 FutureTask的使用</text>
       </navLabel>
       <content src="text00141.html"/>
     </navPoint>
     <navPoint id="id165" playOrder="165">
       <navLabel>
         <text>10.4.3 FutureTask的实现</text>
       </navLabel>
       <content src="text00142.html"/>
     </navPoint>
     <navPoint id="id166" playOrder="166">
       <navLabel>
         <text>10.5 本章小结</text>
       </navLabel>
       <content src="text00143.html"/>
     </navPoint>
     <navPoint id="id167" playOrder="167">
       <navLabel>
         <text>第11章 Java并发编程实践</text>
       </navLabel>
       <content src="text00144.html"/>
     </navPoint>
     <navPoint id="id168" playOrder="168">
       <navLabel>
         <text>11.1 生产者和消费者模式</text>
       </navLabel>
       <content src="text00145.html"/>
     </navPoint>
     <navPoint id="id169" playOrder="169">
       <navLabel>
         <text>11.1.1 生产者消费者模式实战</text>
       </navLabel>
       <content src="text00146.html"/>
     </navPoint>
     <navPoint id="id170" playOrder="170">
       <navLabel>
         <text>11.1.2 多生产者和多消费者场景</text>
       </navLabel>
       <content src="text00147.html"/>
     </navPoint>
     <navPoint id="id171" playOrder="171">
       <navLabel>
         <text>11.1.3 线程池与生产消费者模式</text>
       </navLabel>
       <content src="text00148.html"/>
     </navPoint>
     <navPoint id="id172" playOrder="172">
       <navLabel>
         <text>11.2 线上问题定位</text>
       </navLabel>
       <content src="text00149.html"/>
     </navPoint>
     <navPoint id="id173" playOrder="173">
       <navLabel>
         <text>11.3 性能测试</text>
       </navLabel>
       <content src="text00150.html"/>
     </navPoint>
     <navPoint id="id174" playOrder="174">
       <navLabel>
         <text>11.4 异步任务池</text>
       </navLabel>
       <content src="text00151.html"/>
     </navPoint>
     <navPoint id="id175" playOrder="175">
       <navLabel>
         <text>11.5 本章小结</text>
       </navLabel>
       <content src="text00152.html"/>
     </navPoint>
   </navMap>
</ncx>